{"version":3,"sources":["core.js","components/img/splash.jpeg","components/splash/index.js","context/Reducer.js","context/Context.js","components/login/index.js","components/signup/index.js","components/profile/index.js","components/admin/index.js","components/admin/Admin.jsx","components/user/User.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","Splash","style","backgroundColor","width","height","position","bottom","src","img","alt","reducer","state","action","type","payload","name","email","_id","user","console","log","darkTheme","GlobalContext","createContext","data","undefined","ContextProvider","children","useReducer","dispatch","Provider","value","validationSchema","yup","required","password","min","max","Weather","history","useHistory","useContext","formik","useFormik","initialValues","onSubmit","values","axios","post","withCredentials","then","res","Box","sx","flexGrow","AppBar","Toolbar","Button","variant","color","onClick","push","margin","textAlign","handleSubmit","Stack","spacing","TextField","fullWidth","id","label","onChange","handleChange","error","touched","Boolean","errors","helperText","score","wicket","bowlerwicket","Profile","useState","posts","setPosts","useEffect","get","socket","io","on","message","close","fontSize","over","bowlerBalls","batsmanBalls","Dashboard","batsmanARuns","batsmanABall","batsmanBRuns","batsmanBBall","Post","batsmanNameA","setBatsmanNameA","batsmanNameB","setBatsmanNameB","bowlerNameA","setBowlerNameA","bowlerNameB","setBowlerNameB","batsmanAName","batsmanBName","display","flexDirection","flexWrap","justifyContent","marginTop","e","target","Admin","postsB","setPostsB","postsC","setPostsC","className","map","eachPost","index","marginLeft","batsmanABalls","batsmanBBalls","App","catch","exact","path","component","Login","Signup","to","User","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bec074d.chunk.js","sourcesContent":["const dev = \"http://localhost:5001\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","export default __webpack_public_path__ + \"static/media/splash.a6542106.jpeg\";","import img from \"../img/splash.jpeg\"\r\n// E:\\mern\\web\\src\\components\\img\\splash.jpeg\r\n\r\nfunction Splash() {\r\n\r\n    return (\r\n        <>\r\n            <div style={{backgroundColor: \"#181415\", width: \"100%\", height: \"90vh\"}}>\r\n\r\n                <img style={{\r\n                    width: \"100%\",\r\n                    position: \"fixed\",\r\n                    bottom: \"0px\"\r\n                }}\r\n                    src={img} alt=\"\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Splash;","\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"USER_LOGIN\": {\r\n      if (\r\n        action.payload.name &&\r\n        action.payload.email &&\r\n        action.payload._id) {\r\n\r\n        return { ...state, user: action.payload }\r\n\r\n      } else {\r\n        console.log(`invalid data in USER_LOGIN reducer `);\r\n        return state;\r\n      }\r\n    }\r\n    case \"USER_LOGOUT\": {\r\n      return { ...state, user: null } // set this to null on purpose, do not change\r\n    }\r\n    case \"TOGGLE_THEME\": {\r\n      return { ...state, darkTheme: !state.darkTheme } // set this to null on purpose, do not change\r\n    }\r\n\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { reducer } from './Reducer';\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n  darkTheme: true,\r\n  user: undefined\r\n}\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, data)\r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../core\"\r\n\r\nimport { GlobalContext } from '../../context/Context';\r\nimport { useContext } from \"react\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport { useFormik} from \"formik\";\r\nimport { useHistory } from 'react-router';\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction Weather() {\r\n  let history = useHistory();\r\n\r\n  let { dispatch } = useContext(GlobalContext);\r\n\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values)\r\n\r\n      axios.post(`${baseUrl}/api/v1/login`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      }, {\r\n        withCredentials: true\r\n      })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n\r\n          if (res.data.email) {\r\n\r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                _id: res.data._id\r\n              }\r\n            })\r\n            // history.push(\"/\")\r\n          }\r\n\r\n\r\n        })\r\n\r\n    }\r\n  });\r\n\r\n  return (\r\n\r\n<>\r\n<Box sx={{ flexGrow: 1 }} >\r\n      <AppBar  position=\"static\" > \r\n        <Toolbar\r\n        >\r\n      \r\n          {/* <Button style={{textAlign:\"center\"}} variant=\"h1\" color=\"inherit\"onClick={() => { history.push(\"/\") }}>Dashboard</Button> */}\r\n          <Button variant=\"h6\"color=\"inherit\"onClick={() => { history.push(\"/\") }} sx={{ flexGrow: 2 }}>Login</Button>\r\n          <Button variant=\"h6\"color=\"inherit\"onClick={() => { history.push(\"/signup\") }} sx={{ flexGrow: 2 }}>Signup</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n\r\n\r\n    <div style={{ margin: \"2rem\" }}>\r\n      <h1 style={{textAlign:\"center\",color:\"blueviolet\"}} >Login page</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n          <Button  fullWidth variant=\"contained\" color=\"primary\"onClick={() => { history.push(\"/signup\") }}>Create an Account</Button>\r\n      \r\n        </Stack>\r\n\r\n      </form>\r\n\r\n    </div>\r\n</>\r\n\r\n  );\r\n}\r\nexport default Weather;","import axios from 'axios';\r\n\r\nimport { useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../core\"\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport { useHistory } from 'react-router';\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n});\r\n\r\nfunction Weather() {\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: function (values) {\r\n            axios.post(`${baseUrl}/api/v1/signup`, {\r\n                name: values.name,\r\n                email: values.email,\r\n                password: values.password,\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                    history.push(\"/\")\r\n                })\r\n        }\r\n    });\r\n\r\n    return (\r\n<>\r\n<Box sx={{ flexGrow: 1 }} >\r\n      <AppBar  position=\"static\" sx={{ flexGrow: 1 }}> \r\n        <Toolbar >\r\n        <Button variant=\"h6\"color=\"inherit\"onClick={() => { history.push(\"/\") }} sx={{ flexGrow: 1 }}>Login</Button >\r\n          <Button variant=\"h6\"color=\"inherit\"onClick={() => { history.push(\"/signup\") }} sx={{ flexGrow: 1 }}>Signup</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n\r\n\r\n        <div style={{ margin: \"2rem\" }}>\r\n            <h1 style={{textAlign:\"center\",color:\"blueviolet\"}}>Signup page</h1>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Stack spacing={2}>\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Full Name\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"name\"\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                        helperText={formik.touched.name && formik.errors.name}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-ba\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"filled-basic\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n\r\n                        name=\"password\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    />\r\n\r\n                    <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Signup</Button>\r\n          <Button  fullWidth variant=\"contained\" color=\"primary\"onClick={() => { history.push(\"/\") }}>Already have an Account</Button>\r\n\r\n                </Stack>\r\n\r\n            </form>\r\n\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nexport default Weather;","import axios from 'axios';\r\nimport { useState, useEffect } from \"react\"\r\nimport { baseUrl } from \"./../../core\"\r\n// import { GlobalContext } from './../../context/Context';\r\n// import { useContext } from \"react\";\r\n// import Post from \"./post\"\r\nimport { useHistory } from 'react-router';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport io from 'socket.io-client';\r\nimport * as yup from 'yup';\r\nimport { useFormik } from \"formik\";\r\n\r\nconst validationSchema = yup.object({\r\n    score: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n    wicket: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n    bowlerwicket: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n});\r\n\r\n\r\nfunction Profile() {\r\n    const [posts, setPosts] = useState([])\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            score: '',\r\n            wicket: '',\r\n            bowlerwicket: '',\r\n        },\r\n        onSubmit: function (values) {\r\n\r\n            console.log(values);\r\n\r\n            axios.post(`${baseUrl}/api/v1/score`, {\r\n                score: values.score,\r\n                wicket: values.wicket,\r\n                bowlerwicket: values.bowlerwicket,\r\n            }, {\r\n                withCredentials: true\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                })\r\n\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/score?page=0`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res score api: \", res.data);\r\n                setPosts(res.data)\r\n\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const socket = io(\"http://localhost:5001\"); // to connect with locally running Socker.io server\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connected to server\")\r\n        });\r\n        socket.on('disconnect', function (message) {\r\n            console.log(\"disconnected from server: \", message);\r\n        });\r\n        socket.on('SCORE', function (data) {\r\n            console.log(data);\r\n            setPosts([data, ...posts])\r\n            // console.log(posts);\r\n\r\n        });\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, []);\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n            {/* <Box sx={{ flexGrow: 1 }} >\r\n                <AppBar position=\"static\" sx={{ flexGrow: 1 }}>\r\n                    <Toolbar >\r\n                        <Button variant=\"h6\" color=\"inherit\" onClick={() => { history.push(\"/\") }} sx={{ flexGrow: 1 }}>Login</Button >\r\n                        <Button variant=\"h6\" color=\"inherit\" onClick={() => { history.push(\"/signup\") }} sx={{ flexGrow: 1 }}>Signup</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box> */}\r\n\r\n\r\n            <div style={{width: \"30%\"}}>\r\n                {/* <h1 style={{ textAlign: \"center\", color: \"blueviolet\" }}>Signup page</h1> */}\r\n\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <Stack spacing={2}>\r\n\r\n                        <TextField\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"score\"\r\n                            label=\"score\"\r\n                            variant=\"outlined\"\r\n                            type=\"Number\"\r\n                            value={formik.values.score}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.score && Boolean(formik.errors.score)}\r\n                            helperText={formik.touched.score && formik.errors.score}\r\n                        />\r\n\r\n                        <TextField\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"wicket\"\r\n                            label=\"wicket\"\r\n                            variant=\"outlined\"\r\n                            type=\"Number\"\r\n\r\n                            value={formik.values.wicket}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.wicket && Boolean(formik.errors.wicket)}\r\n                            helperText={formik.touched.wicket && formik.errors.wicket}\r\n                        />\r\n\r\n                        <TextField\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"bowlerwicket\"\r\n                            label=\"bowlerwicket\"\r\n                            variant=\"outlined\"\r\n                            type=\"Number\"\r\n\r\n\r\n                            value={formik.values.bowlerwicket}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.bowlerwicket && Boolean(formik.errors.bowlerwicket)}\r\n                            helperText={formik.touched.bowlerwicket && formik.errors.bowlerwicket}\r\n                        />\r\n\r\n                        <Button\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Send Data</Button>\r\n\r\n                    </Stack>\r\n\r\n                </form>\r\n\r\n\r\n              \r\n            </div>\r\n\r\n\r\n     </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import axios from 'axios';\r\nimport { useState, useEffect } from \"react\"\r\nimport { baseUrl } from \"../../core\"\r\n// import { GlobalContext } from './../../context/Context';\r\n// import { useContext } from \"react\";\r\n// import Post from \"./post\"\r\nimport Profile from '../profile';\r\nimport { useHistory } from 'react-router';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport io from 'socket.io-client';\r\nimport * as yup from 'yup';\r\nimport { useFormik } from \"formik\";\r\nconst validationSchema = yup.object({\r\n    over: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n    bowlerBalls: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n    batsmanBalls: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n});\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n    const [posts, setPosts] = useState([])\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            over: '',\r\n            bowlerBalls: '',\r\n            batsmanBalls: '',\r\n        },\r\n        onSubmit: function (values) {\r\n            console.log(values);\r\n            axios.post(`${baseUrl}/api/v1/ball`, {\r\n                over: values.over,\r\n                bowlerBalls: values.bowlerBalls,\r\n                batsmanBalls: values.batsmanBalls,\r\n            }, {\r\n                withCredentials: true\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                })\r\n\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/ball?page=0`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setPosts(res.data)\r\n\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const socket = io(\"http://localhost:5001\"); // to connect with locally running Socker.io server\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connected to server\")\r\n        });\r\n        socket.on('disconnect', function (message) {\r\n            console.log(\"disconnected from server: \", message);\r\n        });\r\n        socket.on('POSTS', function (data) {\r\n            console.log(data);\r\n            setPosts([data, ...posts])\r\n            console.log(posts);\r\n\r\n        });\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, []);\r\n\r\n    // const loadMore = () => {\r\n    //         axios.get(`${baseUrl}/api/v1/posts?page=${posts.length}`,\r\n    //             {\r\n    //                 withCredentials: true\r\n    //             })\r\n    //             .then((res) => {\r\n    //                 console.log(\"res +++: \", res.data);\r\n    //                 if (res.data?.length) {\r\n    //                     const newPosts = [...posts, ...res.data]\r\n    //                     setPosts(newPosts)\r\n    //                 } else {\r\n    //                     setIsMore(false)\r\n    //                 }\r\n    //             })\r\n    //     }\r\n    return (\r\n        <>\r\n         <div style={{ width: \"30%\" }}>\r\n                {/* <h1 style={{ textAlign: \"center\", color: \"blueviolet\" }}>dash</h1> */}\r\n\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <Stack spacing={2}>\r\n\r\n                        <TextField\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"over\"\r\n                            label=\"over\"\r\n                            variant=\"outlined\"\r\n                            type=\"Number\"\r\n                            value={formik.values.over}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.over && Boolean(formik.errors.over)}\r\n                            helperText={formik.touched.over && formik.errors.over}\r\n                        />\r\n\r\n                        <TextField\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"bowlerBalls\"\r\n                            label=\"bowlerBalls\"\r\n                            variant=\"outlined\"\r\n                            type=\"Number\"\r\n\r\n                            value={formik.values.bowlerBalls}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.bowlerBalls && Boolean(formik.errors.bowlerBalls)}\r\n                            helperText={formik.touched.bowlerBalls && formik.errors.bowlerBalls}\r\n                        />\r\n\r\n                        <TextField\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            id=\"batsmanBalls\"\r\n                            label=\"batsmanBalls\"\r\n                            variant=\"outlined\"\r\n                            type=\"Number\"\r\n\r\n\r\n                            value={formik.values.batsmanBalls}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.batsmanBalls && Boolean(formik.errors.batsmanBalls)}\r\n                            helperText={formik.touched.batsmanBalls && formik.errors.batsmanBalls}\r\n                        />\r\n\r\n                        <Button \r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Send Data</Button>\r\n\r\n                    </Stack>\r\n\r\n                </form>\r\n\r\n\r\n\r\n            </div>\r\n\r\n                                {/* <Profile /> */}\r\n{/* \r\n            {posts.map((eachPost, index) => (\r\n                <div key={index}>\r\n                    <h1>over{eachPost?.over}</h1>\r\n                    <h1>BowlerBowls{eachPost?.bowlerBalls}</h1>\r\n                    <h1>batsmanBowls{eachPost?.batsmanBalls}</h1>\r\n                    <div className=\"row row-cols-1 row-cols-md-2 g-4\">\r\n                        <div className=\"col\">\r\n                            <div className=\"card\">\r\n\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{eachPost?.over}</h5>\r\n                                    <h5 className=\"card-text\">{eachPost?.batsmanBalls}</h5>\r\n                                    <h5 className=\"card-text\">{eachPost?.bowlerBalls}</h5>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"card\">\r\n\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Card title</h5>\r\n                                    <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                     \r\n                    </div>\r\n                </div>\r\n\r\n            ))} */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import axios from 'axios';\r\nimport { useState, useEffect } from \"react\"\r\nimport { baseUrl } from \"../../core\"\r\n// import { GlobalContext } from './../../context/Context';\r\n// import { useContext } from \"react\";\r\n// import Post from \"./post\"\r\nimport Dashboard from '.';\r\nimport Profile from '../profile';\r\nimport { useHistory } from 'react-router';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport io from 'socket.io-client';\r\nimport * as yup from 'yup';\r\nimport { useFormik } from \"formik\";\r\nconst validationSchema = yup.object({\r\n    batsmanARuns: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n    batsmanABall: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n    batsmanBRuns: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n    batsmanBBall: yup\r\n        .number('Enter Anyone number')\r\n        .required('Ball is required'),\r\n});\r\n\r\n\r\n\r\nfunction Post() {\r\n    const [batsmanNameA, setBatsmanNameA] = useState(\"Babar Azam\");\r\n    const [batsmanNameB, setBatsmanNameB] = useState(\"Rizwan\");\r\n    const [bowlerNameA, setBowlerNameA] = useState(\"Mitchell Starc\");\r\n    const [bowlerNameB, setBowlerNameB] = useState(\"Pat Cummins\");\r\n    const [posts, setPosts] = useState([])\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            batsmanABall: '',\r\n            batsmanARuns: '',\r\n            batsmanBBall: '',\r\n            batsmanBRuns: '',\r\n        },\r\n        onSubmit: function (values) {\r\n            console.log(values);\r\n            values.batsmanNameA = batsmanNameA;\r\n            values.batsmanNameB = batsmanNameB;\r\n            values.bowlerNameA = bowlerNameA;\r\n            values.bowlerNameB = bowlerNameB;\r\n\r\n\r\n            console.log(values.batsmanNameA);\r\n            console.log(values.batsmanNameB);\r\n            console.log(values.bowlerNameA);\r\n            console.log(values.bowlerNameB);\r\n\r\n\r\n\r\n            axios.post(`${baseUrl}/api/v1/player`, {\r\n                batsmanAName: values.batsmanNameA,\r\n                batsmanBName: values.batsmanNameB,\r\n                bowlerNameA: values.bowlerNameA,\r\n                bowlerNameB: values.bowlerNameB,\r\n                batsmanABall: values.batsmanABall,\r\n                batsmanARuns: values.batsmanARuns,\r\n                batsmanBBall: values.batsmanBBall,\r\n                batsmanBRuns: values.batsmanBRuns,\r\n            }, {\r\n                withCredentials: true\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                })\r\n\r\n\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/player?page=0`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                // console.log(\"res +++: \", res.data);\r\n                setPosts(res.data)\r\n\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const socket = io(\"http://localhost:5001\"); // to connect with locally running Socker.io server\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connected to server\")\r\n        });\r\n        socket.on('disconnect', function (message) {\r\n            console.log(\"disconnected from server: \", message);\r\n        });\r\n        socket.on('POSTS', function (data) {\r\n            console.log(data);\r\n            setPosts([data, ...posts])\r\n            console.log(posts);\r\n\r\n        });\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, []);\r\n\r\n    // const loadMore = () => {\r\n    //         axios.get(`${baseUrl}/api/v1/posts?page=${posts.length}`,\r\n    //             {\r\n    //                 withCredentials: true\r\n    //             })\r\n    //             .then((res) => {\r\n    //                 console.log(\"res +++: \", res.data);\r\n    //                 if (res.data?.length) {\r\n    //                     const newPosts = [...posts, ...res.data]\r\n    //                     setPosts(newPosts)\r\n    //                 } else {\r\n    //                     setIsMore(false)\r\n    //                 }\r\n    //             })\r\n    //     }\r\n\r\n    const selectBatsmanA = (e) => {\r\n        setBatsmanNameA(e.target.value);\r\n    };\r\n\r\n\r\n    const selectBatsmanB = (e) => {\r\n        setBatsmanNameB(e.target.value);\r\n    };\r\n\r\n    const selectBowlerA = (e) => {\r\n        setBowlerNameA(e.target.value);\r\n    };\r\n    const selectBowlerB = (e) => {\r\n        setBowlerNameB(e.target.value);\r\n    };\r\n    return (\r\n        <>\r\n            <Box sx={{ flexGrow: 1 }} >\r\n                <AppBar position=\"static\" sx={{ flexGrow: 1 }}>\r\n                    <Toolbar >\r\n                        <Button variant=\"h6\" color=\"inherit\" onClick={() => { history.push(\"/user\") }} sx={{ flexGrow: 1 }}>User Panel</Button >\r\n                        {/* <Button variant=\"h6\" color=\"inherit\" onClick={() => { history.push(\"/signup\") }} sx={{ flexGrow: 1 }}>Signup</Button> */}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n\r\n\r\n<div style={{ display: \"flex\" ,flexDirection:\"row\",flexWrap:\"wrap\",justifyContent:\"space-around\", marginTop:\"15px\" }} >\r\n\r\n<div> <Profile />  </div>\r\n<div>  <Dashboard/> </div>\r\n                \r\n<div>\r\n<div style={{ width: \"40%\" }}>\r\n                    {/* <h1 style={{ textAlign: \"center\", color: \"blueviolet\" }}>dash</h1> */}\r\n                 <form onSubmit={formik.handleSubmit}>\r\n                        <Stack spacing={2}>\r\n                            <select\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                onChange={selectBatsmanA}\r\n                            >\r\n                                <option value=\"Babar Azam\">Babar Azam</option>\r\n\r\n                                <option value=\"Rizwan\">Rizwan</option>\r\n                                <option value=\"Fakhar Zaman\">Fakhar Zaman</option>\r\n                                <option value=\"Haider Ali\">Haider Ali</option>\r\n                                <option value=\"Mohammad Hafeez\">Mohammad Hafeez</option>\r\n                                <option value=\"Shoaib Malik\">Shoaib Malik</option>\r\n                                <option value=\"Asif Ali\">Asif Ali</option>\r\n                                <option value=\"Shadab Khan\">Shadab Khan</option>\r\n                                <option value=\"Imad Wasim\">Imad Wasim</option>\r\n                                <option value=\"Hasan Ali\">Hasan Ali</option>\r\n                                <option value=\"Shaheen Afridi\">Shaheen Afridi</option>\r\n                                <option value=\"Haris Rauf\">Haris Rauf</option>\r\n                            </select>\r\n                            <select\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                onChange={selectBatsmanB}\r\n                            >\r\n\r\n                                <option value=\"Mohammad Rizwan\">Mohammad Rizwan</option>\r\n                                <option value=\"Fakhar Zaman\">Fakhar Zaman</option>\r\n                                <option value=\"Haider Ali\">Haider Ali</option>\r\n                                <option value=\"Mohammad Hafeez\">Mohammad Hafeez</option>\r\n                                <option value=\"Shoaib Malik\">Shoaib Malik</option>\r\n                                <option value=\"Asif Ali\">Asif Ali</option>\r\n                                <option value=\"Shadab Khan\">Shadab Khan</option>\r\n                                <option value=\"Imad Wasim\">Imad Wasim</option>\r\n                                <option value=\"Hasan Ali\">Hasan Ali</option>\r\n                                <option value=\"Shaheen Afridi\">Shaheen Afridi</option>\r\n                                <option value=\"Haris Rauf\">Haris Rauf</option>\r\n                                <option value=\"Babar Azam\">Babar Azam</option>\r\n                            </select>\r\n\r\n\r\n                            <select\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                onChange={selectBowlerA}\r\n                            >\r\n                                <option value=\"Mitchell Starc\">Mitchell Starc</option>\r\n                                <option value=\"Adam Zampa\">Adam Zampa</option>\r\n                                <option value=\"Aaron Finch\">Aaron Finch</option>\r\n                                <option value=\"Ashton Agar\">Ashton Agar</option>\r\n                                <option value=\"Josh Hazlewood\">Josh Hazlewood</option>\r\n                                <option value=\"Josh Inglis\">Josh Inglis</option>\r\n                                <option value=\"Mitchell Marsh\">Mitchell Marsh</option>\r\n                                <option value=\"Glenn Maxwell\">Glenn Maxwell</option>\r\n                                <option value=\"Kane Richardson\">Kane Richardson</option>\r\n                                <option value=\"Steve Smith\">Steve Smith</option>\r\n                                <option value=\"Marcus Stoinis\">Marcus Stoinis</option>\r\n                                <option value=\"Pat Cummins\">Pat Cummins</option>\r\n                            </select>\r\n\r\n\r\n                            <select\r\n                                style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                onChange={selectBowlerB}\r\n                            >\r\n                                <option value=\"Pat Cummins\">Pat Cummins</option>\r\n                                <option value=\"Mitchell Starc\">Mitchell Starc</option>\r\n                                <option value=\"Adam Zampa\">Adam Zampa</option>\r\n                                <option value=\"Aaron Finch\">Aaron Finch</option>\r\n                                <option value=\"Ashton Agar\">Ashton Agar</option>\r\n                                <option value=\"Josh Hazlewood\">Josh Hazlewood</option>\r\n                                <option value=\"Josh Inglis\">Josh Inglis</option>\r\n                                <option value=\"Mitchell Marsh\">Mitchell Marsh</option>\r\n                                <option value=\"Glenn Maxwell\">Glenn Maxwell</option>\r\n                                <option value=\"Kane Richardson\">Kane Richardson</option>\r\n                                <option value=\"Steve Smith\">Steve Smith</option>\r\n                                <option value=\"Marcus Stoinis\">Marcus Stoinis</option>\r\n                            </select>\r\n\r\n\r\n\r\n\r\n                            <TextField\r\n                             style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"batsmanARuns\"\r\n                                label=\"batsmanARuns\"\r\n                                variant=\"outlined\"\r\n                                type=\"Number\"\r\n                                value={formik.values.batsmanARuns}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.batsmanARuns && Boolean(formik.errors.batsmanARuns)}\r\n                                helperText={formik.touched.batsmanARuns && formik.errors.batsmanARuns}\r\n                            />\r\n\r\n                            <TextField\r\n                             style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"batsmanABall\"\r\n                                label=\"batsmanABall\"\r\n                                variant=\"outlined\"\r\n                                type=\"Number\"\r\n\r\n                                value={formik.values.batsmanABall}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.batsmanABall && Boolean(formik.errors.batsmanABall)}\r\n                                helperText={formik.touched.batsmanABall && formik.errors.batsmanABall}\r\n                            />\r\n\r\n                            <TextField\r\n                             style={{ width: \"20vw\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"batsmanBRuns\"\r\n                                label=\"batsmanBRuns\"\r\n                                variant=\"outlined\"\r\n                                type=\"Number\"\r\n\r\n\r\n                                value={formik.values.batsmanBRuns}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.batsmanBRuns && Boolean(formik.errors.batsmanBRuns)}\r\n                                helperText={formik.touched.batsmanBRuns && formik.errors.batsmanBRuns}\r\n                            />\r\n                            <TextField\r\n                             style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }}\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"batsmanBBall\"\r\n                                label=\"batsmanBBall\"\r\n                                variant=\"outlined\"\r\n                                type=\"Number\"\r\n\r\n\r\n                                value={formik.values.batsmanBBall}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.batsmanBBall && Boolean(formik.errors.batsmanBBall)}\r\n                                helperText={formik.touched.batsmanBBall && formik.errors.batsmanBBall}\r\n                            />\r\n\r\n                            <Button  style={{ width: \"200px\", height: \"7vh\", fontSize: \"22px\" }} fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Send Data</Button>\r\n\r\n                        </Stack>\r\n\r\n                    </form>\r\n\r\n\r\n                </div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n            {/* <div>\r\n                <div>\r\n                    \r\n              \r\n                </div>\r\n               \r\n\r\n              \r\n            </div> */}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Post;","import * as React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from \"react\"\r\nimport { baseUrl } from \"../../core\"\r\n// import { GlobalContext } from './../../context/Context';\r\n// import { useContext } from \"react\";\r\n// import Post from \"./post\"\r\n// import Profile from '../profile';\r\nimport { useHistory } from 'react-router';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport io from 'socket.io-client';\r\n// import * as yup from 'yup';\r\n// import { useFormik } from \"formik\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Admin (){\r\n    const [posts, setPosts] = useState([])\r\n    const [postsB, setPostsB] = useState([])\r\n    const [postsC, setPostsC] = useState([])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/ball?page=0`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res ball api: \", res.data);\r\n                setPosts(res.data)\r\n\r\n            })\r\n    }, [])\r\n\r\n    \r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/score?page=0`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res score api: \", res.data);\r\n                setPostsB(res.data)\r\n\r\n            })\r\n    }, [])\r\n     \r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/player?page=0`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res player api: \", res.data);\r\n                setPostsC(res.data)\r\n\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const socket = io(\"http://localhost:5001\"); // to connect with locally running Socker.io server\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connected to server\")\r\n        });\r\n        socket.on('disconnect', function (message) {\r\n            console.log(\"disconnected from server: \", message);\r\n        });\r\n        socket.on('POSTS', function (data) {\r\n            console.log(data);\r\n            setPosts([data, ...posts])\r\n            console.log(posts);\r\n\r\n        });\r\n        socket.on('SCORE', function (data) {\r\n            console.log(data);\r\n            setPostsB([data, ...postsB])\r\n            console.log(postsB);\r\n\r\n        });\r\n          socket.on('PLAYER', function (data) {\r\n            console.log(data);\r\n            setPostsC([data, ...postsC])\r\n            console.log(postsC);\r\n\r\n        });\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n    <div>\r\n       \r\n        <div className=\"row row-cols-1 row-cols-md-2 g-4 mt-1\">\r\n        <div className=\"col\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                 <h1>Pakistan</h1>   \r\n                {postsB.map((eachPost, index) => (<h1 key={index} style={{display:\"inline\"}}>{eachPost?.score} / </h1>))}\r\n                {postsB.map((eachPost, index) => (<h1 key={index} style={{display:\"inline\"}}>{eachPost?.wicket} </h1>))}\r\n                {posts.map((eachPost, index) => (<h1 key={index} style={{display:\"inline\" ,marginLeft:\"5%\"}}>({eachPost?.over})Overs</h1>))}<br/><br/><br/>\r\n                {postsC.map((eachPost, index) => (<h1 key={index} style={{display:\"inline\"}}>({eachPost?.batsmanAName})*</h1>))}\r\n                {posts.map((eachPost, index) => (<h1 key={index} style={{display:\"inline\"}}>({eachPost?.batsmanBalls})</h1>))}\r\n                {postsC.map((eachPost, index) => (<h1 key={index} style={{display:\"inline\"}}>Runs{eachPost?.batsmanARuns}</h1>))}\r\n                {postsC.map((eachPost, index) => (<h3 key={index} style={{display:\"inline\"}}>Balls{eachPost?.batsmanABalls}</h3>))}<br/>\r\n\r\n                {postsC.map((eachPost, index) => (<h1 key={index} style={{display:\"inline\"}}>{eachPost?.batsmanBName}</h1>))}\r\n                {postsC.map((eachPost, index) => (<h3 key={index} style={{display:\"inline\"}}>Runs{eachPost?.batsmanBRuns}</h3>))}\r\n                {postsC.map((eachPost, index) => (<h3 key={index} style={{display:\"inline\"}}>Balls{eachPost?.batsmanBBalls}</h3>))}\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n              <h1>Australia</h1>   \r\n              {postsC.map((eachPost, index) => (<h3 key={index} >{eachPost?.bowlerNameA}</h3>))}\r\n                {postsC.map((eachPost, index) => (<h3 key={index} style={{display:\"inline\"}}>{eachPost?.bowlerNameB}</h3>))}    {postsB.map((eachPost, index) => (<h1 key={index} style={{display:\"inline\"}}>{eachPost?.bowlerwicket}w</h1>))}<br/><br/><br/>\r\n\r\n                <h2 style={{display:\"inline\"}}className=\"card-title\">BowlerB</h2><h3 style={{display:\"inline\"}}>Bowler runs</h3><h3 style={{display:\"inline\"}}>Bowler wicket</h3>\r\n\r\n                  \r\n                </div>\r\n            </div>\r\n        </div>\r\n       \r\n    </div>\r\n    </div>\r\n    )\r\n};\r\nexport default Admin","// import logo from './logo.svg';\nimport './App.css';\nimport { baseUrl } from \"./core\"\nimport axios from 'axios';\nimport { useEffect,} from \"react\"\n\nimport {\n\n  Switch,\n  Route,\n\n  useHistory,\n  Redirect\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import { Button, Navbar, Container, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap';\n\n\n\nimport Splash from \"./components/splash/index\"\nimport Login from \"./components/login/index\"\nimport Signup from \"./components/signup/index\"\nimport Admin from './components/admin/Admin';\nimport User from'./components/user/User';\n\nimport Profile from \"./components/profile/index\"\n\nimport { GlobalContext } from './context/Context';\nimport { useContext } from \"react\";\n\n\n\n\n\nfunction App() {\n\n  let history = useHistory();\n  let { state, dispatch } = useContext(GlobalContext);\n\n  const logout = () => {\n    axios.post(`${baseUrl}/api/v1/logout`, {}, {\n      withCredentials: true\n    })\n      .then((res) => {\n        console.log(\"res +++: \", res.data);\n  \n        dispatch({\n          type: \"USER_LOGOUT\"\n        })\n      })\n  }\n\n  useEffect(() => {\n\n    axios.get(`${baseUrl}/api/v1/profile`, {\n      withCredentials: true\n    })\n      .then((res) => {\n        console.log(\"res: \", res.data);\n\n        if (res.data.email) {\n\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              _id: res.data._id\n            }\n          })\n        } else {\n          dispatch({ type: \"USER_LOGOUT\" })\n        }\n      }).catch((e) => {\n        dispatch({ type: \"USER_LOGOUT\" })\n      })\n\n    return () => {\n    };\n  }, []);\n\n\n  return (\n    <>\n\n      \n\n\n\n      {(state.user === undefined) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Splash />\n          </Route>\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n        : null}\n\n      {(state.user === null) ?\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Redirect to=\"/\" />\n        </Switch> : null\n      }\n\n      {(state.user) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Admin />\n          </Route>\n          <Route exact path=\"/user\">\n            <User />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n        : null}\n\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nimport ContextProvider from \"./context/Context\"\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}